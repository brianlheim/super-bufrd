TITLE:: SuperIndex
summary:: Double-precision index into a buffer
related:: Classes/SuperPlayBuf, Classes/SuperPlayBufX, Classes/SuperBufRd, Classes/SuperPhasor

DESCRIPTION::
This is a wrapper to simplify conversion between seconds, samples, and the special int/float pair used by link::Classes/SuperPlayBuf:: et al. SuperIndex objects can also be used directly as inputs to SuperPlayBuf and the like.

There are convenience methods added to Buffer which return SuperIndexes:
code::
buf.atSec(seconds)
buf.atPair([intAsFloat, float])
::


CLASSMETHODS::

METHOD:: new
Makes a new SuperIndex from a position in samples

ARGUMENT:: sampleNum
Samples

ARGUMENT:: sampleRate
Optional sample rate, defaults to Server.default.sampleRate, or 44100 if Server.default.sampleRate is nil

METHOD:: fromSecs
Make a new SuperIndex from a position in seconds

ARGUMENT:: secs
Seconds

ARGUMENT:: sampleRate
Optional sample rate, defaults to Server.default.sampleRate, or 44100 if Server.default.sampleRate is nil

METHOD:: fromPair
Makes a new SuperIndex from an int/float pair

ARGUMENT:: pair
Array of [intAsFloat, float]

ARGUMENT:: sampleRate
Optional sample rate, defaults to Server.default.sampleRate, or 44100 if Server.default.sampleRate is nil

INSTANCEMETHODS::

PRIVATE:: printOn, asOSCArgEmbeddedArray, asUGenInput

METHOD:: asPair, asArray
Index position as int/float pair

METHOD:: asSecs
Index position as number of seconds

METHOD:: asDouble
Index position as number of samples



EXAMPLES::

code::
b = Buffer.read(s, Platform.resourceDir +/+ "sounds/a11wlk01.wav");
i = b.atSec(1.567); // make an index
i.asPair; // get int/float pair
i.asDouble; // get position in samples

// used to set playback range of soundfile:
{ SuperPlayBuf.ar(1, b, 1, b.atSec(1.567), b.atSec(2.34)) }.play
::
